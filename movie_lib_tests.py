#W2D4

from mov_lib import *

def test_ratings_by_ID():
    assert ratings_by_ID('172') == ['5', '4', '3', '3', '4', '4', '4', '5', '4', '4', '5', '3', '5', '5', '5', '4', '5', '5', '3', '5', '5', '4', '3', '4', '4', '3', '4', '4', '4', '4', '3', '5', '5', '3', '4', '4', '4', '5', '4', '5', '4', '5', '3', '5', '5', '3', '5', '5', '5', '5', '5', '5', '5', '2', '1', '5', '5', '5', '4', '5', '1', '5', '5', '5', '5', '4', '5', '4', '4', '5', '5', '4', '5', '3', '5', '5', '5', '5', '3', '2', '5', '4', '5', '4', '5', '3', '5', '5', '5', '5', '5', '5', '4', '5', '3', '2', '5', '4', '3', '4', '4', '2', '5', '4', '5', '3', '3', '5', '4', '4', '5', '5', '5', '3', '3', '5', '5', '4', '3', '3', '4', '1', '5', '4', '5', '4', '5', '5', '5', '5', '4', '2', '3', '4', '4', '5', '4', '5', '2', '5', '5', '5', '5', '5', '5', '4', '3', '4', '4', '3', '3', '3', '5', '4', '4', '4', '1', '3', '4', '3', '4', '4', '5', '3', '3', '5', '3', '3', '5', '5', '4', '5', '5', '1', '1', '2', '5', '4', '4', '4', '4', '5', '4', '4', '3', '3', '5', '5', '3', '4', '4', '5', '5', '5', '4', '3', '5', '4', '5', '4', '3', '3', '5', '5', '5', '2', '5', '5', '3', '5', '5', '4', '5', '5', '5', '4', '5', '5', '4', '4', '4', '3', '5', '3', '5', '5', '5', '5', '5', '4', '4', '4', '5', '3', '5', '5', '5', '4', '4', '4', '5', '4', '4', '5', '5', '4', '4', '5', '4', '4', '5', '4', '5', '4', '5', '4', '5', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '4', '4', '4', '3', '5', '5', '5', '4', '5', '3', '5', '5', '5', '5', '4', '5', '4', '5', '5', '4', '5', '4', '4', '5', '5', '5', '5', '5', '4', '4', '5', '2', '5', '4', '5', '3', '4', '4', '3', '4', '5', '5', '4', '4', '4', '5', '5', '4', '5', '4', '2', '4', '4', '3', '4', '3', '4', '3', '4', '4', '5', '5', '5', '5', '3', '5', '5', '4', '5', '5', '5', '3', '5', '3', '5', '3', '5', '4', '4', '2', '5', '4', '5', '5', '4', '4', '3', '5', '4', '5', '3', '4', '5', '5', '5', '3', '5', '5', '5', '3']


def test_ratings_by_ID_AVG():
    assert calc_avg_rating('172') >= 4.20 and calc_avg_rating('172') < 4.21
        #above test allows rounding error


def test_find_movie():
    assert find_movie_by_ID("33") == "Desperado (1995)"


def test_all_ratings():
    assert all_rating_for_a_user("55") == ['5', '4', '1', '5', '1', '3', '2', '1', '1', '3', '5', '2', '3', '4', '5', '5', '5', '4', '3', '4', '3']
