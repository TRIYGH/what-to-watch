#W2D4

from movie_lib import *

def test_ratings_by_ID():
    assert ratings_by_ID('172') == ['5', '4', '3', '3', '4', '4', '4', '5', '4', '4', '5', '3', '5', '5', '5', '4', '5', '5', '3', '5', '5', '4', '3', '4', '4', '3', '4', '4', '4', '4', '3', '5', '5', '3', '4', '4', '4', '5', '4', '5', '4', '5', '3', '5', '5', '3', '5', '5', '5', '5', '5', '5', '5', '2', '1', '5', '5', '5', '4', '5', '1', '5', '5', '5', '5', '4', '5', '4', '4', '5', '5', '4', '5', '3', '5', '5', '5', '5', '3', '2', '5', '4', '5', '4', '5', '3', '5', '5', '5', '5', '5', '5', '4', '5', '3', '2', '5', '4', '3', '4', '4', '2', '5', '4', '5', '3', '3', '5', '4', '4', '5', '5', '5', '3', '3', '5', '5', '4', '3', '3', '4', '1', '5', '4', '5', '4', '5', '5', '5', '5', '4', '2', '3', '4', '4', '5', '4', '5', '2', '5', '5', '5', '5', '5', '5', '4', '3', '4', '4', '3', '3', '3', '5', '4', '4', '4', '1', '3', '4', '3', '4', '4', '5', '3', '3', '5', '3', '3', '5', '5', '4', '5', '5', '1', '1', '2', '5', '4', '4', '4', '4', '5', '4', '4', '3', '3', '5', '5', '3', '4', '4', '5', '5', '5', '4', '3', '5', '4', '5', '4', '3', '3', '5', '5', '5', '2', '5', '5', '3', '5', '5', '4', '5', '5', '5', '4', '5', '5', '4', '4', '4', '3', '5', '3', '5', '5', '5', '5', '5', '4', '4', '4', '5', '3', '5', '5', '5', '4', '4', '4', '5', '4', '4', '5', '5', '4', '4', '5', '4', '4', '5', '4', '5', '4', '5', '4', '5', '4', '4', '4', '4', '4', '5', '5', '5', '5', '5', '4', '4', '4', '3', '5', '5', '5', '4', '5', '3', '5', '5', '5', '5', '4', '5', '4', '5', '5', '4', '5', '4', '4', '5', '5', '5', '5', '5', '4', '4', '5', '2', '5', '4', '5', '3', '4', '4', '3', '4', '5', '5', '4', '4', '4', '5', '5', '4', '5', '4', '2', '4', '4', '3', '4', '3', '4', '3', '4', '4', '5', '5', '5', '5', '3', '5', '5', '4', '5', '5', '5', '3', '5', '3', '5', '3', '5', '4', '4', '2', '5', '4', '5', '5', '4', '4', '3', '5', '4', '5', '3', '4', '5', '5', '5', '3', '5', '5', '5', '3']


def test_ratings_by_ID_AVG():
    assert calc_avg_rating('172') >= 4.20 and calc_avg_rating('172') < 4.21
        #above test allows rounding error


def test_find_movie():
    assert find_movie_by_ID("33") == "Desperado (1995)"


def test_all_ratings():
    assert all_rating_for_a_user("55") == ['5', '4', '1', '5', '1', '3', '2', '1', '1', '3', '5', '2', '3', '4', '5', '5', '5', '4', '3', '4', '3']


def test_ratings_per_movie():
    assert num_of_ratings_per_movie(6) == 26


def test_topX_movies():
    assert top_ten_movies(20,25) == ['408', 4.491071428571429, '318', 4.466442953020135, '169', 4.466101694915254, '483', 4.45679012345679, '114', 4.447761194029851, '64', 4.445229681978798, '603', 4.3875598086124405, '12', 4.385767790262173, '50', 4.3584905660377355, '178', 4.344, '513', 4.333333333333333,
    '134', 4.292929292929293, '963', 4.2926829268292686, '427', 4.292237442922374, '357', 4.291666666666667, '98', 4.28974358974359, '480', 4.284916201117318, '127', 4.283292978208232, '285', 4.265432098765432, '272', 4.262626262626263]


def test_unwatched_movies_user():
    uwm = len(get_unrated_movies_for_user('55'))
    assert uwm == 1661
